{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  is_loading: false,\n  error_message: false,\n  parkings: [],\n  parking: {}\n}; // get all Parking------------------------\n\nexport const getAll = createAsyncThunk(\"parking-get-all\", async () => {\n  let response = await axios.get(\"/api/v1/parking\");\n  return response.data.parking;\n}); // create driver--------------------\n\nexport const createParking = createAsyncThunk(\"parking-create-new\", async (body, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    let response = await axios.post(\"/api/v1/parking\", body);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n}); // delete Parking---------------\n\nexport const deleteParking = createAsyncThunk(\"parking-delete\", async id => {\n  let response = await axios.delete(`api/v1/parking/${id}`);\n  return id;\n}); // update parking------------\n\nexport const updateParking = createAsyncThunk(\"parking-update\", async data => {\n  console.log(data);\n  let response = await axios.put(`api/v1/parking/${data._id}`, data);\n  return data;\n});\nconst parkingSlice = createSlice({\n  name: \"parking\",\n  initialState,\n  reducers: {\n    getParking(state, action) {\n      state.parking = state.parkings.find(item => item._id === action.payload);\n    }\n\n  },\n  extraReducers: {\n    // get all parking--------\n    [getAll.fulfilled]: (state, action) => {\n      state.parkings = action.payload;\n      state.is_loading = false;\n    },\n    [getAll.pending]: (state, action) => {\n      state.is_loading = true;\n    },\n    // create parking-----\n    [createParking.fulfilled]: (state, action) => {\n      state.parkings = action.payload;\n    },\n    [createParking.rejected]: (state, action) => {\n      state.error_message = \"Something is Wrong !!..\";\n    },\n    // update parking------------\n    [updateParking.fulfilled]: (state, action) => {\n      const updatedData = action.payload;\n      state.parkings = state.parkings.map(item => item._id === updatedData._id ? updatedData : item);\n      state.parking = updatedData;\n    },\n    // delete------------\n    [deleteParking.fulfilled]: (state, _ref2) => {\n      let {\n        payload: id\n      } = _ref2;\n      state.parkings = state.parkings.filter(item => item._id !== id);\n    }\n  }\n});\nexport default parkingSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","is_loading","error_message","parkings","parking","getAll","response","get","data","createParking","body","rejectWithValue","post","error","message","deleteParking","id","delete","updateParking","console","log","put","_id","parkingSlice","name","reducers","getParking","state","action","find","item","payload","extraReducers","fulfilled","pending","rejected","updatedData","map","filter","reducer"],"sources":["D:/Parking management/frontend/src/store/slice/parking-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  is_loading: false,\r\n  error_message: false,\r\n  parkings: [],\r\n  parking: {},\r\n};\r\n\r\n// get all Parking------------------------\r\nexport const getAll = createAsyncThunk(\"parking-get-all\", async () => {\r\n  let response = await axios.get(\"/api/v1/parking\");\r\n\r\n  return response.data.parking;\r\n});\r\n\r\n// create driver--------------------\r\nexport const createParking = createAsyncThunk(\r\n  \"parking-create-new\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      let response = await axios.post(\"/api/v1/parking\", body);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// delete Parking---------------\r\nexport const deleteParking = createAsyncThunk(\"parking-delete\", async (id) => {\r\n  let response = await axios.delete(`api/v1/parking/${id}`);\r\n\r\n  return id;\r\n});\r\n\r\n// update parking------------\r\nexport const updateParking = createAsyncThunk(\r\n  \"parking-update\",\r\n  async (data) => {\r\n    console.log(data);\r\n    let response = await axios.put(`api/v1/parking/${data._id}`, data);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst parkingSlice = createSlice({\r\n  name: \"parking\",\r\n  initialState,\r\n  reducers: {\r\n    getParking(state, action) {\r\n      state.parking = state.parkings.find(\r\n        (item) => item._id === action.payload\r\n      );\r\n    },\r\n  },\r\n  extraReducers: {\r\n    // get all parking--------\r\n    [getAll.fulfilled]: (state, action) => {\r\n      state.parkings = action.payload;\r\n      state.is_loading = false;\r\n    },\r\n    [getAll.pending]: (state, action) => {\r\n      state.is_loading = true;\r\n    },\r\n\r\n    // create parking-----\r\n    [createParking.fulfilled]: (state, action) => {\r\n      state.parkings = action.payload;\r\n    },\r\n    [createParking.rejected]: (state, action) => {\r\n      state.error_message = \"Something is Wrong !!..\";\r\n    },\r\n\r\n    // update parking------------\r\n    [updateParking.fulfilled]: (state, action) => {\r\n      const updatedData = action.payload;\r\n      state.parkings = state.parkings.map((item) =>\r\n        item._id === updatedData._id ? updatedData : item\r\n      );\r\n      state.parking = updatedData;\r\n    },\r\n\r\n    // delete------------\r\n    [deleteParking.fulfilled]: (state, { payload: id }) => {\r\n      state.parkings = state.parkings.filter((item) => item._id !== id);\r\n    },\r\n  },\r\n});\r\n\r\nexport default parkingSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}